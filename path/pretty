#!/usr/bin/perl
use strict;
use experimental qw(switch);

my $contents;
my $output;

undef $/;
my $contents;

#All together:
while (<>)
{
  $contents = $_;
  $contents =~ s/,\s*/,\n/sg;
  $contents =~ s/\n\n+/\n/sg;
  $contents =~ s/([\(\)\[\]\{\}])/\n$1\n/sg;
}
$/ = "\n";

#By line:
my $indent = 0;
open(LINES, "<", \$contents) or die qq~Could not analyze by line~;
open(OUTPUT, ">", \$output) or die qq~Could not write to variable~;
while (<LINES>)
{
  my $line = $_;
  chomp($line);
  $indent-- if($line =~ /^[\)\]\}]$/);
  if($line ne "") {
    print OUTPUT ("  " x $indent) . $line . "\n";
  }
  $indent++ if($line =~ /^[\(\[\{]$/);
  #$block = /^\s*\w+\(/i .. /\);?\s*$/i

}
close(LINES);
close(OUTPUT);

#All together:
undef $/;
open(REFLOW, "<", \$output) or die qq~Could not reflow lines~;
while (<REFLOW>)
{
  $contents = $_;
  #Consolidate empty [], (), {}
  $contents =~ s/\[\n\s*\]/[]\n/sg;
  $contents =~ s/\(\n\s*\)/()\n/sg;
  $contents =~ s/\{\n\s*\}/{}\n/sg;

  #Empty on the same line as =, :
  $contents =~ s/([=:])\n\s*([\(\[\{])/$1$2/sg;
  #comma on same line as ], ), }
  $contents =~ s/([\]\)\}])\n\s*,/$1,\n/sg;

  #remove blank lines:
  $contents =~ s/\n\n+/\n/sg;
}
$/ = "\n";
close(REFLOW);

print "$contents";