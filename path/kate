#!/bin/bash
#Kubernetes (k8s) helper scripts
CONFIG=~/.kate
shopt -s extglob

context=$(kubectl config current-context)
source $CONFIG 2>/dev/null #get current namespace

function set_namespace() {
  echo "namespace=\"${1}\"" > ${CONFIG}
  echo -e " namespace \033[34;1m${1}\033[0m";
}

if [ -z ${1} ]; then
  IFS='|'
  for ctx in $(kubectl config get-contexts -o=name | tr $'\n' '|')
  do
    if [ "$ctx" == "$context" ];then
      echo -e "\033[33;1m${ctx}\033[0m"
      kubectl get namespace -o name | sed 's/namespace\///' |
      while read ns
      do
        if [ "$ns" == "$namespace" ];then
          echo -e "  \033[36;1m${ns}\033[0m"
        else
          echo -e "  \033[34;1m${ns}\033[0m"
        fi
      done
    else
      echo -e "\033[32;1m${ctx}\033[0m"
    fi
  done
else
  case "${1}" in
    -*) #options passthrough
        kubectl -n ${namespace} $@
        exit
      ;;
    @($(kubectl help | sed -n '/^  [^ ]*/ p' | cut -d' ' -f3 | tr $'\n' '|'))) #command passthrough
        kubectl -n ${namespace} $@
        exit
      ;;
  esac

  #contexts
  kubectl config get-contexts $1 >/dev/null 2>&1
  if [ "$?" -ne "0" ]; then
    #namespaces
    kubectl get namespace $1 >/dev/null 2>&1
    if [ "$?" -ne "0" ]; then
      #passthrough (probably an error)
      kubectl -n ${namespace} $@
    else
      set_namespace $1
    fi
  else #set context
    kubectl config use-context $1 >/dev/null 2>&1
    echo -en "Switching to context \033[32;1m${1}\033[0m";
    if [ -z ${2} ]; then
      set_namespace default
    else
      shift
      #namespaces
      kubectl get namespace $1 >/dev/null 2>&1
      if [ "$?" -ne "0" ]; then
        #passthrough (probably an error)
        kubectl -n ${namespace} $@
      else
        set_namespace $1
      fi
    fi
  fi
fi


